{"version":3,"sources":["PreviewPane.js","Sliders/components.js","Sliders/BarChart.js","Sliders/RangeSlider.js","Sliders/Sliders.js","SliderPane.js","QueryFilter.js","FilterPane.js","InfoFields.js","InfoPane.js","ViewPane.js","MappingsPane.js","Export.js","Projection.js","Layout.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["PreviewPane","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","dimensions","imgURL","previewImage","timeoutId","_createClass","key","value","this","setPreviewPaneCanvas","side_canvas","prevProps","_this2","hover_index","setState","clearTimeout","setTimeout","_this3","previewPane_image_size","_jsxs","children","style","position","width","height","textAlign","_jsx","display","verticalAlign","setPreviewImage","ref","Component","React","memo","thumbHeight","MuiRail","withStyles","theme","rail","backgroundColor","palette","grey","pointerEvents","railHotspot","top","cursor","_ref","classes","getRailProps","Fragment","_objectSpread","className","MuiHandle","root","secondary","main","marginLeft","marginTop","border","borderRadius","whiteSpace","zIndex","_ref2","_ref2$domain","_slicedToArray","domain","min","max","_ref2$handle","handle","id","percent","getHandleProps","role","left","concat","MuiTrack","track","trackHotspot","_ref3","source","target","getTrackProps","MuiTickComponent","_ref4","tick","count","format","Typography","label","variant","defaultProps","d","BarChart","_React$Component","isHovering","barSelected","onLeave","bind","_assertThisInitialized","normalize","data","i","settings","currentProjection","push","metadata","sliderID","buckets","bucketsFinder","stepSize","targetBucket","Math","abs","length","bucketCount","parseFloat","toFixed","bucketList","Object","values","ratio","apply","round","barDataValues","chartElement","barID","index","arr","Float32Array","fill","prevArr","barData","forEach","element","calculateProjection","_this$props","color","selected","defaults","animation","markerData","Array","barDataSoll","histogram","barDataIst","calculateHistogram","barDataCalc","labels","map","val","datasets","type","barThickness","normalized","order","hoverBackgroundColor","options","responsive","interaction","mode","intersect","events","onClick","onHover","event","bgColor","hoverEffect","native","plugins","legend","tooltip","enabled","scales","x","stacked","yAxes","beginAtZero","Bar","onMouseLeave","RangeSlider","datafilter","range","update","inputValues","typeNumber","step","isToggleOn","changeSlider","currentValues","handleClick","e","prevState","stopPropagation","onChangeSlider","title","_this$state","Grid","container","item","xs","Slider","rootStyle","onUpdate","onChange","Rail","Handles","handles","Tracks","right","tracks","alignItems","justifyContent","marginRight","TextField","fullWidth","size","margin","inputProps","padding","evt","newState","Tooltip","info","Sliders","slidersAr","sliders","refSliders","filterData","filtered","createRef","filterVals","componentName","console","log","filteredArr","list","idx","reduce","curr","SliderList","slider","SliderPane","sliderReset","filterImageAr","CustomAutoComplete","_GridDataAutoComplete","arguments","parsedCategory","_get","_getPrototypeOf","prototype","GridDataAutoCompleteHandler","CustomResultProcessing","_SimpleResultProcessi","_super2","row","fieldOrLabel","operator","field","tryToGetFieldCategory","toLowerCase","indexOf","_","startsWith","SimpleResultProcessing","Filterbox","_super3","exportMetadata","filteredMetadata","obj","filterDataToExportCSV","document","getElementsByClassName","click","parseOK","query2","applyFilter","resetFilter","search","customAutoComplete","newData","process","query","self","pick","fontWeight","fontSize","expressions","ReactFilterBox","autoCompleteHandler","customRenderCompletionItem","onParseOk","onParseError","editorConfig","lineWrapping","ButtonGroup","Button","FilterPane","spacing","allFilter","InfoFields","InfoList","infos","uuid","wrap","Title","InfoPane","ViewPane","handleChange","checked","handleChangeGrey","filterGrey","clusters","handleChangeCluster","option","Box","defaultValue","scaleMin","handleChangeScale","scaleMax","handleChangeZoom","MappingsPane","handleSelectAlgorithm","handleSelectDataset","v","selectAlgorithm","selectDataset","algorithm_options","algorithm_choice","dataset_options","selectedDataset","datasetInfo","Export","makePNG","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_context","prev","next","canvasToImage","getElementById","stop","_Fragment","marginBottom","CSVLink","filename","Projection","handleResize","camera","aspect","updateProjectionMatrix","renderer","setSize","current_scale","getScaleFromZ","z","d3_x","d3_y","y","resize_transform","d3","translate","scale","view","mount","d3_zoom","transform","updateProjection","ar","filterAr","ranges","ar_sliced","sprite_number","start","sprite_size","end","slice","c","points","scene","geometry","attributes","filteredActive","THREE","needsUpdate","updatePass2Shader","num","material","uniforms","greyTransparency","imageTransparency","updateClusterColors","clusterSelected","numVertices","clusterColors","total","clustersAr_sliced","l","clusterId","cluster","clusterActive","loadTiles","tilesLoaded","init","pointsAr","addPoints","setupCamera","animate","getZFromScale","changeEmbeddings","sprite_side","tile_locations","_toConsumableArray","n","datasetDir","datasetIMG","src","img","createElement","new_choice","embedding_chunks","mappings","_loop","echunk","array","tween","TWEEN","to","easing","Linear","None","input","clamp","scaleProj","rvFOV","degToRad","fov","tan","camera_z_position","fov_height","d3_transform","k","set","new_size","zoomScaler","point_group","camera_z_start","embeddings_data","vFOV","min_x","max_x","ys","min_y","max_y","max_x_from_center","m","max_y_from_center","far","scaleExtent","on","zoomHandler","initial_scale","initial_transform","_this4","_this$props2","loader","textures","t","load","w","flipY","magFilter","vertices","embedding","vert","positionAr","offsetAr","clusterAr","addAttribute","texture_subsize","sprite_image_size","sprite_actual_size","floor","clusterList","clusterTypeSelected","includes","texture","repeat","vertexShader","fragmentShader","transparent","point_cloud","userData","sprite_index","add","hover_container","point","frustumCulled","visible","digit_index","full_index","_this$props3","offsets","copyVector3sArray","offset","highlight_container","highlights","remove","mouse_position","_this$props4","previewPane_ctx","mouse_vector","mouseX","mouseY","mouseToThree","raycaster","setFromCamera","params","Points","threshold","intersects","intersectObjects","sorted_intersects","sortIntersectsByDistanceToRay","object","undefined","setHoverIndex","highlightPoint","clearRect","fillRect","fillStyle","drawImage","error","_this5","domElement","_d3$mouse","node","_d3$mouse2","checkIntersects","clickOnImage","_this$props5","preserveDrawingBuffer","alpha","setClearColor","autoClear","appendChild","addBlankHighlightPoints","handleMouse","requestAnimationFrame","clear","parseInt","greyRenderTypeSelected","render","_this$props6","removeChild","_this6","_this$props7","tileProgress","allTiles","CircularProgress","overflow","Layout","newArr","A","B","currentFilter","currentSearch","refProjection","current","toggleControl","collapsedControl","toggleObject","collapsedObject","ww","wh","previewPane_height","controlPane_height","filterPane_height","setDefaults","algorithm_name","window","addEventListener","addToUrl","p","changeDataset","innerWidth","innerHeight","previewPane_mount","offsetHeight","imageSmoothingEnabled","canvas","ctx","getContext","url_prefix","Filename","alt","removeEventListener","url","link_URL","open","err","main_style","background","general_style","lineHeight","displayNumb","maxHeight","controlMenu_mount","ProSidebar","collapsed","Menu","iconShape","MenuItem","FaAngleDoubleLeft","FaAngleDoubleRight","SubMenu","defaultOpen","icon","FaDatabase","grem","font_size","FaSlidersH","FaSearch","FaCloudDownloadAlt","FaRegImage","FaInfo","FaEye","FaQuestion","href","rel","initPath","Data","dataset_dirs","defaultDataset","embeddings","queryString","location","urlParams","URLSearchParams","get","loadInit","path","loadSettings","loadBarData","loadMetadata","ID","name","fetch","file","then","response","json","scaled_embeddings","paramName","navigate","toString","directory","choice","newDataset","loadConfig","default","foundInitDataset","floatColorConvertedArr","rgb","prepareMappings","loadDataset","withRouter","useParams","useNavigate","App","BrowserRouter","Routes","Route","exact","WithRouter","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb1c9c75.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass PreviewPane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: {},\n      imgURL: null,\n      previewImage: false,\n      timeoutId: null\n    };\n    // this.onImgLoad = this.onImgLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.setPreviewPaneCanvas(this.side_canvas);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.hover_index !== prevProps.hover_index) {\n      this.setState({ previewImage: false });\n      clearTimeout(this.state.timeoutId);\n      const timeoutId = setTimeout(() => {\n        this.setState({ previewImage: true });\n      }, 100);\n      this.setState({ timeoutId });\n    }\n  }\n\n  render() {\n    let {\n      previewPane_image_size,\n    } = this.props;\n    // const {width, height} = this.state.dimensions;\n    // var imgWidth = \"auto\";\n    // var imgHeight = \"100%\";\n    // if (width >= height) {\n    //   imgWidth = \"100%\";\n    //   imgHeight = \"auto\"\n    // };\n\n    return (\n      <div>\n      <div style={{position: \"absolute\", width: previewPane_image_size, height: previewPane_image_size, textAlign: \"center\"}}>\n        <span style={{display: \"inline-block\", height: \"100%\", verticalAlign: \"middle\"}}/>\n\n      {this.state.previewImage === true ? this.props.setPreviewImage() : null}\n      \n      </div>\n        <canvas \n          ref={side_canvas => {\n            this.side_canvas = side_canvas\n          }}\n          width={previewPane_image_size}\n          height={previewPane_image_size}\n        />\n      </div>\n    )\n  }\n}\nexport default React.memo(PreviewPane)\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n// Based on Material Design spec:\n// Styles by https://github.com/RafeSacks\n// https://material.io/design/components/sliders.html#spec\nconst trackHeight = 2;\nconst thumbHeight = 12;\n\n// *******************************************************\n// RAIL COMPONENT\n// *******************************************************\n\nconst muiRailStyle = theme => ({\n  rail: {\n    backgroundColor: theme.palette.grey[400],\n    width: \"100%\",\n    height: trackHeight,\n    position: \"absolute\",\n    pointerEvents: \"none\"\n  },\n  railHotspot: {\n    // backgroundColor: \"green\", // for debugging\n    width: \"100%\",\n    height: thumbHeight * 2, // Invisible hotspot same size as thumb\n    top: thumbHeight * -1,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiRailComponent({ classes, getRailProps }) {\n  return (\n    <Fragment>\n      <div className={classes.railHotspot} {...getRailProps()} />\n      <div className={classes.rail} />\n    </Fragment>\n  );\n}\n\nMuiRailComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getRailProps: PropTypes.func.isRequired\n};\n\nexport const MuiRail = withStyles(muiRailStyle)(MuiRailComponent);\n\n// *******************************************************\n// HANDLE COMPONENT\n// *******************************************************\n\nconst muiHandleStyle = theme => ({\n  root: {\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: thumbHeight * -0.5,\n    marginTop: thumbHeight * -0.5,\n    width: thumbHeight,\n    height: thumbHeight,\n    border: 0,\n    borderRadius: \"50%\", // circle\n    // boxShadow: \"1px 1px 1px 1px rgba(0, 0, 0, 0.2)\",\n    whiteSpace: \"nowrap\", // for child display inline-block to work\n    position: \"absolute\",\n    zIndex: 2,\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiHandleComponent({\n  domain: [min, max],\n  handle: { id, value, percent },\n  classes,\n  getHandleProps\n}) {\n  return (\n    <div\n      role=\"slider\"\n      aria-valuemin={min}\n      aria-valuemax={max}\n      aria-valuenow={value}\n      className={classes.root}\n      style={{ left: `${percent}%` }}\n      {...getHandleProps(id)}\n    />\n  );\n}\n\nMuiHandleComponent.propTypes = {\n  domain: PropTypes.array.isRequired,\n  handle: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getHandleProps: PropTypes.func.isRequired\n};\n\nexport const MuiHandle = withStyles(muiHandleStyle)(MuiHandleComponent);\n\n// *******************************************************\n// TRACK COMPONENT\n// *******************************************************\n\nconst muiTrackStyle = theme => ({\n  track: {\n    backgroundColor: theme.palette.secondary.main,\n    height: trackHeight,\n    position: \"absolute\",\n    zIndex: 1,\n    pointerEvents: \"none\"\n  },\n  trackHotspot: {\n    // backgroundColor: \"grey\", // for debugging\n    height: thumbHeight, // Invisible hotspot same size as thumb\n    top: thumbHeight * -0.5,\n    position: \"absolute\",\n    cursor: \"pointer\"\n  }\n});\n\nfunction MuiTrackComponent({ classes, source, target, getTrackProps }) {\n  const left = `${source.percent}%`;\n  const width = `${target.percent - source.percent}%`;\n\n  return (\n    <Fragment>\n      <div className={classes.track} style={{ left, width }} />\n      <div\n        className={classes.trackHotspot}\n        style={{ left, width }}\n        {...getTrackProps()}\n      />\n    </Fragment>\n  );\n}\n\nMuiTrackComponent.propTypes = {\n  source: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  target: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  getTrackProps: PropTypes.func.isRequired\n};\n\nexport const MuiTrack = withStyles(muiTrackStyle)(MuiTrackComponent);\n\n// *******************************************************\n// TICK COMPONENT\n// *******************************************************\n\nconst muiTickStyle = theme => ({\n  tick: {\n    position: \"absolute\",\n    marginTop: 14,\n    width: 1,\n    height: 5,\n    backgroundColor: theme.palette.grey[400]\n  },\n  label: {\n    position: \"absolute\",\n    marginTop: 22,\n    textAlign: \"center\"\n  }\n});\n\nexport function MuiTickComponent({ classes, tick, count, format }) {\n  return (\n    <div>\n      <div className={classes.tick} style={{ left: `${tick.percent}%` }} />\n      <Typography\n        className={classes.label}\n        variant=\"caption\"\n        style={{\n          marginLeft: `${-(100 / count) / 2}%`,\n          width: `${100 / count}%`,\n          left: `${tick.percent}%`\n        }}\n      >\n        {format(tick.value)}\n      </Typography>\n    </div>\n  );\n}\n\nMuiTickComponent.propTypes = {\n  tick: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    percent: PropTypes.number.isRequired\n  }).isRequired,\n  classes: PropTypes.object.isRequired,\n  count: PropTypes.number.isRequired,\n  format: PropTypes.func.isRequired\n};\n\nMuiTickComponent.defaultProps = {\n  format: d => d\n};\n\nexport const MuiTick = withStyles(muiTickStyle)(MuiTickComponent);\n","import React from \"react\";\nimport { Bar, defaults } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      // bgColor: this.props.color,\n      isHovering: false,\n      barSelected: null,\n    }\n    this.onLeave = this.onLeave.bind(this)\n    // this.showHideUpdate = this.showHideUpdate.bind(this);\n  }\n  \n\n  calculateHistogram(domain,normalize){\n    // Calculate frequency of data (adapted for float numbers)\n    let data = []\n    for(let i=0;i<this.props.settings[\"total\"];i++){\n      if(this.props.currentProjection[i]===0){\n        data.push(this.props.metadata[i][this.props.sliderID])\n      }\n    }\n    var buckets = {};\n    this.bucketsFinder = {};\n    const bucketCount = 50;\n    var stepSize;\n    if(domain[0] < 0){stepSize = (Math.abs(domain[0]) + Math.abs(domain[1])) / bucketCount}\n    else{stepSize = Math.abs((Math.abs(domain[0]) - Math.abs(domain[1])) / bucketCount)}\n    // Console.log(\"stepSize\", stepSize);\n    for (let i = 0; i < bucketCount; i++) {\n      buckets[i] = 0;\n    }\n    var targetBucket;\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] === domain[1]){targetBucket = bucketCount-1}\n        else {\n          // console.log(data[i])\n          targetBucket = ((data[i] - domain[0]) / stepSize) | 0\n        }\n        buckets[targetBucket] +=1;\n        // if (typeNumber === \"int\")\n        // this.bucketsFinder[parseInt(data[i])] = targetBucket;\n        // else\n        this.bucketsFinder[parseFloat(data[i]).toFixed(1)] = targetBucket;\n      }\n    var bucketList = Object.values(buckets)\n    if (normalize === true){\n      // Normalize data\n      var ratio = Math.max.apply(Math, bucketList) / 50;\n        for (i = 0; i < bucketList.length; i++) {\n          bucketList[i] = Math.round(bucketList[i] / ratio);\n        }\n      }\n    const barDataValues = [];\n    for (let i = 0; i < bucketList.length; i++) {\n      barDataValues.push(bucketList[i] || 0);\n    }\n    // console.log(barDataValues)\n    return barDataValues;\n  }\n\n\n  hoverEffect(chartElement) {\n    this.setState({isHovering: true});\n    if (chartElement[0]) {\n      var barID = chartElement[0].index;\n      var arr = new Float32Array( this.props.settings[\"total\"] ).fill(1);\n      // var arr = !this.props.filterImageAr;\n      var prevArr = this.props.currentProjection;\n      // console.log(this.props.barData[\"selections\"][barID]);?\n      this.props.barData[\"selections\"][barID].forEach(element => {\n        // if (prevArr[element] === 1) {\n          arr[element] = prevArr[element]\n        // }\n        // console.log(this.props.barData[\"selections\"][barID])\n      });\n      this.props.calculateProjection(arr, null, false);\n      this.setState({barSelected: barID});\n    }\n  }\n\n  onLeave() { \n    // this.setState(() => ({isHovering: false}), () => console.log(this.state));\n    this.setState({isHovering: false});\n    this.props.calculateProjection(this.props.currentProjection, null, false)\n  }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentProjection !== prevProps.currentProjection) {\n  //     this.barDataIst = this.calculateFrequencyOfData(this.props.domain,this.props.datafilter,false);\n  //   }\n  // }\n\n\n  render() {\n    const { barData, domain, color, selected } = this.props;\n    defaults.animation = false;\n    var markerData = Array(50).fill(0);\n    this.barDataSoll = barData.histogram;\n    this.barDataIst = this.calculateHistogram(domain,false);\n    const barDataCalc = {\n      labels: this.barDataSoll.map((val, i) => i),\n      datasets: [\n        {\n          label: \"barDataIst\",\n          type: 'bar',\n          barThickness: 5,\n          normalized: true,\n          order: 2,\n          backgroundColor: this.state.isHovering ? \"rgb(64, 64, 64)\" : markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#f50057\"\n              : color\n            ),\n          hoverBackgroundColor: color,\n          // backgroundColor: this.state.bgColor,\n\n          // backgroundColor: this.barDataIst.map((val, i) =>\n          // i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //   ? \"rgb(245, 0, 87)\"\n          //   : this.state.isHovering ? \"rgb(64, 64, 64)\" : color\n          // ),\n          data: this.barDataIst\n          },\n\n          {\n            label: \"barDataSoll\",\n            type: 'bar',\n            barThickness: 5,\n            normalized: true,\n            order: 3,\n            backgroundColor: markerData.map((val, i) =>\n            i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n              ? \"#542032\"\n              : \"rgb(64, 64, 64)\"\n            ),\n            hoverBackgroundColor: \"rgb(64, 64, 64)\",\n\n          //   backgroundColor: this.barDataIst.map((val, i) =>\n          //   i === this.bucketsFinder[parseFloat(selected).toFixed(1)]\n          //     ? \"rgb(255, 153, 189)\"\n          //     : \"rgb(64, 64, 64)\"\n          // ),\n            // hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            data: this.barDataSoll\n          }\n      ]\n    };\n\n    // console.log(\"selected\",this.bucketsFinder[parseFloat(selected).toFixed(1)] );\n    const options = {\n      responsive: true,\n      // pointStyle: 'triangle',\n      interaction: {\n        mode: 'index',\n        intersect: false\n        },\n      events: ['mouseleave', \"mousemove\", \"mouseout\", \"click\"], //, 'touchstart', 'touchmove'],\n      hoverBackgroundColor: color,\n      onClick: () => {\n            this.setState({isHovering: !this.state.isHovering});\n            this.props.calculateProjection(this.props.currentProjection, null, false)\n      },\n      onHover: (event, chartElement) => {\n        if (event.type === \"mousemove\" && this.state.isHovering && this.state.barSelected !== chartElement[0].index) {\n          this.setState({bgColor: \"rgb(64, 64, 64)\"});\n          this.hoverEffect(chartElement)\n          if (event.native.target.style.cursor !== 'ew-resize') {\n            event.native.target.style.cursor = 'ew-resize';\n          }\n        } else if (!this.state.isHovering && event.native.target.style.cursor !== 'pointer') {\n            event.native.target.style.cursor = 'pointer';\n          }\n      // if (this.state.isHovering){\n      //   ReactTooltip.hide(this.fooRef)\n      // }\n      },\n      plugins: {\n        legend: {\n          display: false\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      scales: {\n        x: {\n          display: false,\n          stacked: true,\n          // position: 'bottom'\n        },\n        yAxes: {\n          beginAtZero: true,\n          display: false,\n          // stacked: true,\n          // ticks: {\n          //   min: 100\n          // }\n        }\n      }\n    };\n\n\n    return (\n      <Bar data={barDataCalc} height={62} options={options} onMouseLeave={this.onLeave} />\n      );\n  }\n}\n\nexport default React.memo(BarChart);\n","import React from \"react\";\nimport { Grid, TextField, Tooltip, Button } from \"@material-ui/core\";\nimport { Slider, Rail, Handles, Tracks } from \"react-compound-slider\";\nimport { MuiRail, MuiHandle, MuiTrack } from \"./components\";\nimport BarChart from \"./BarChart\";\n\n\nclass RangeSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    let data = props.datafilter;//.filter(() => true);\n    const range = [Math.min.apply(null, data),Math.max.apply(null, data)];\n    this.state = {\n      domain: range,\n      update: range,\n      values: range,\n      inputValues: range,\n      typeNumber: this.props.typeNumber,\n      step:props.step,\n      color:props.color,\n      hover_index: this.props.hover_index,\n      isToggleOn: false,\n    };\n\n    this.changeSlider = this.changeSlider.bind(this);\n    this.currentValues = range;\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }));\n    e.stopPropagation();\n  }\n\n  changeSlider(values) {\n    this.currentValues = values;\n    this.props.onChangeSlider(this.props.title, values);\n  }\n\n\n  render() {\n    const { domain, values, update, inputValues, color, typeNumber } = this.state;\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <div style={{ height: \"90px\", width: \"270px\", marginTop: \"12px\"}}>\n            <BarChart\n              update={update}\n              domain={domain}\n              color={color}\n              barData={this.props.barData}\n              calculateProjection={this.props.calculateProjection}\n              settings={this.props.settings}\n              currentProjection={this.props.currentProjection}\n              sliderID={this.props.sliderID}\n              metadata={this.props.metadata}\n              selected={this.props.metadata[this.props.hover_index][this.props.sliderID]}\n\n            />\n            \n            <Slider\n              mode={3}\n              step={typeNumber === \"int\"?1:0.01}\n              domain={domain}\n              color={color}\n              rootStyle={{\n                position: \"relative\",\n                width: \"100%\"\n              }}\n              onUpdate={(update) => {\n                this.setState({ update, inputValues: update });\n              }}\n              onChange={(values) => {\n                this.setState({ values });\n                this.changeSlider(update);\n              }}\n              values={values}\n            >\n              <Rail>\n                {({ getRailProps }) => <MuiRail getRailProps={getRailProps} />}\n              </Rail>\n              <Handles>\n                {({ handles, getHandleProps }) => (\n                  <div className=\"slider-handles\">\n                    {handles.map((handle) => (\n                      <MuiHandle\n                        key={handle.id}\n                        handle={handle}\n                        domain={domain}\n                        getHandleProps={getHandleProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Handles>\n              <Tracks left={false} right={false}>\n                {({ tracks, getTrackProps }) => (\n                  <div className=\"slider-tracks\">\n                    {tracks.map(({ id, source, target }) => (\n                      <MuiTrack\n                        key={id}\n                        source={source}\n                        target={target}\n                        getTrackProps={getTrackProps}\n                      />\n                    ))}\n                  </div>\n                )}\n              </Tracks>\n            </Slider>\n            <Grid\n              container\n              alignItems=\"center\"\n              justifyContent=\"space-around\"\n              // style={{ marginTop: \"15px\" }}\n            >\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  width=\"8px\"\n                  value={inputValues[0]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [value, inputValues[1]];\n                    this.setState({ inputValues: newState });\n                    if (value && value >= domain[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid item xs={4} style={{ textAlign: \"center\",  marginTop:\"6px\"}}>\n\n              <Tooltip title={<h3>{this.props.info}</h3>}>\n              <h3 style={{cursor: \"help\"}}>{this.props.title}</h3>\n              </Tooltip>\n              </Grid>\n              <Grid\n                item\n                xs={3}\n                style={{\n                textAlign: \"right\",\n                border: \"solid 1px white\",\n                height:\"20px\",\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginTop: 10,\n                }}\n              >\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  label=\"\"\n                  size=\"small\"\n                  value={inputValues[1]}\n                  margin=\"none\"\n                  inputProps={{\n                    style: {\n                      color:\"white\",\n                      padding: 0,\n                      marginLeft: 2\n                    }\n                  }}\n                  // style={{ paddingTop: \"2px\", paddingBottom: \"8px\",color: \"white\" }}\n                  onChange={(evt) => {\n                    const value = evt.target.value;\n                    const newState = [inputValues[0], value];\n                    this.setState({ inputValues: newState });\n                    if (value && value <= domain[1] && value >= values[0]) {\n                      this.setState({ values: newState });\n                    }\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default React.memo(RangeSlider);\n","import React, { Component } from 'react';\nimport { Grid } from \"@material-ui/core\";\nimport RangeSlider from \"./RangeSlider\";\n//import uuid from 'react-uuid';\n\nclass Sliders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeSlider = this.changeSlider.bind(this);\n    // create references for each slider\n    this.slidersAr = []\n    for (let element in this.props.settings.sliders) {\n      this.slidersAr.push( this.props.settings.sliders[element].id );\n    }\n    this.refSliders = {}\n    this.filterData = {}\n    this.filtered = {}\n\n    for(let i=0;i<this.slidersAr.length;i+=1){\n      this.refSliders[this.slidersAr[i]] = React.createRef();\n      // Initial values non filter\n      let filterVals = []\n      for (let element in this.props.metadata) {\n        filterVals.push( this.props.metadata[element][this.slidersAr[i]] );\n      }\n      this.filterData[this.slidersAr[i]] = filterVals\n    }\n    this.state = {\n      datafilter: this.filterData\n    }\n\n  }\n\n  changeSlider(componentName, values) {\n    console.log(componentName, values);\n    let {\n      metadata,\n    } = this.props\n    this.filtered[componentName] = new Float32Array( this.props.settings[\"total\"]).fill(0)\n    let filteredArr = new Float32Array( this.props.settings[\"total\"])\n\n    for(let element in metadata){\n      if(values[0] > metadata[element][componentName] ||\n          values[1] < metadata[element][componentName]\n          ){\n            this.filtered[componentName][element] = 1\n      }\n    }\n    let list = Object.values(this.filtered)\n    let arr = filteredArr.map((x, idx) => list.reduce((max, curr) => max + curr[idx], 0));\n    this.props.calculateProjection(arr, \"filter\", true)\n  }\n\n\n  render() {\n    let {\n      hover_index,\n      settings,\n      barData,\n    } = this.props;\n\n    const slidersSettings = settings['sliders'];\n    const SliderList = slidersSettings.map((slider) =>\n    <Grid item>\n      <RangeSlider\n        ref={this.refSliders[slider['id']]}\n        datafilter={this.state.datafilter[slider['id']]}\n        title={slider['title']}\n        info={slider['info']}\n        typeNumber={slider['typeNumber']}\n        color={slider['color']}\n        onChangeSlider={this.changeSlider}\n        hover_index={hover_index}\n        barData={barData[slider['id']]}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n        settings={settings}\n        sliderID={slider['id']}\n        metadata={this.props.metadata}\n        />\n      </Grid>\n    )\n\n    return (\n      <Grid container style={{ marginLeft: \"6px\"}}>\n        <Grid item >\n        {SliderList}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default Sliders\n","import React, { Component } from 'react'\nimport Sliders from \"./Sliders/Sliders\";\n\nclass SliderPane extends Component {\n  constructor(props) {\n    super(props);\n    this.sliderReset = this.sliderReset.bind(this);\n  }\n\n  sliderReset() {\n    console.log(\"reset range sliders\");\n  }\n\n  render() {\n    let {\n      metadata,\n      hover_index,\n    } = this.props;\n\n    return (\n      <Sliders\n        metadata={metadata}\n        settings={this.props.settings}\n        hover_index={hover_index}\n        barData={this.props.barData}\n        filterImageAr={this.props.filterImageAr}\n        calculateProjection={this.props.calculateProjection}\n        currentProjection={this.props.currentProjection}\n      />\n    )\n  }\n}\n\nexport default React.memo(SliderPane)","import React, { Component } from 'react'\nimport  _ from \"lodash\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\nimport ReactFilterBox, {SimpleResultProcessing, GridDataAutoCompleteHandler} from \"react-filter-box\";\nimport \"./filter-box.css\";\n\n//Extend this class to add your custom operator\nclass CustomAutoComplete extends GridDataAutoCompleteHandler {\n    // Override this method to add new your operator\n    needOperators(parsedCategory) {\n        var result = super.needOperators(parsedCategory);\n        return result.concat([\"startsWith\"]);\n    }\n}\n\nclass CustomResultProcessing extends SimpleResultProcessing {\n    // Override this method to add your handler for startsWith operator\n    filter(row, fieldOrLabel, operator, value){\n        var field = this.tryToGetFieldCategory(fieldOrLabel);\n        switch(operator){\n            case \"==\": return row[field] === value;\n            case \"!=\": return row[field] !== value;\n            case \"contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) >=0;\n            case \"!contains\": return row[field].toLowerCase().indexOf(value.toLowerCase()) <0;\n            case \"startsWith\": return  _.startsWith(row[field].toLowerCase(), value.toLowerCase() ) ;\n            default: return false;\n        }\n    }\n}\n\nclass Filterbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            parseOK: true,\n            query2: {}\n        };\n        this.applyFilter = this.applyFilter.bind(this);\n        this.resetFilter = this.resetFilter.bind(this);\n        this.options = this.props.settings.search;\n        this.customAutoComplete = new CustomAutoComplete(this.props.metadata,this.options);\n        // this.editorConfig = {\n        //     direction: \"rtl\"\n        // };\n    }\n\n    applyFilter() {\n        var newData = new CustomResultProcessing(this.options).process(this.props.metadata, this.state.query2);\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(1);\n        newData.forEach(element => {\n            arr[element[\"index\"]] = 0;\n        });     \n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    resetFilter() {\n        this.setState({ query: null, query2: '' });\n        var arr = new Float32Array(this.props.settings[\"total\"]).fill(0);\n        this.props.calculateProjection(arr, \"search\", true);\n    }\n\n    //customer your rendering item in auto complete\n    customRenderCompletionItem(self, data, pick) {\n        var className = `hint-value cm-${data.type}`\n        return <div className={className} >\n                    <span style={{ fontWeight: \"bold\" }}>{data.value}</span>\n                    <span style={{color:\"gray\", fontSize:10}}> [{data.type}] </span>\n                </div>\n    }\n\n    onParseOk(expressions) {\n        this.setState({ parseOK: false });\n        this.setState({ query2: expressions });\n        // this.applyFilter(expressions);\n    }\n\n    onParseError(expressions) {\n        this.setState({ parseOK: true });\n    }\n    \n    exportMetadata = () => {\n        var filteredMetadata = [];\n        for (let i = 0; i < this.props.metadata.length; i++) {\n          if (this.props.currentProjection[i] === 0) {\n            var obj = this.props.metadata[i];\n            filteredMetadata.push(obj);\n          }\n        }\n        this.setState(\n          { filterDataToExportCSV: filteredMetadata },\n          () => {\n            document.getElementsByClassName('hidden')[0].click();\n          }\n        );\n      };\n      \n\n    render() {\n        return (\n        <div className=\"main-container\">\n            <ReactFilterBox\n                autoCompleteHandler = {this.customAutoComplete}\n                customRenderCompletionItem = {this.customRenderCompletionItem.bind(this) }\n                query={this.state.query}\n                data={this.props.metadata}\n                options={this.options}\n                onParseOk={this.onParseOk.bind(this) }\n                onParseError={this.onParseError.bind(this) }\n                editorConfig={{ lineWrapping: true }}\n            />\n\n            <ButtonGroup variant=\"contained\">\n            <Button onClick={this.applyFilter}>apply</Button>\n            <Button onClick={this.resetFilter}>reset</Button>\n            </ButtonGroup>\n\n        </div>\n        )\n    }\n}\n\nexport default Filterbox","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n//import _ from \"lodash\";\nimport Filterbox from \"./QueryFilter\";\n\nclass FilterPane extends Component {\n\n  render() {\n    let {\n      metadata,\n      settings,\n    } = this.props\n\n    return (\n      <Grid container spacing={2}>\n        <Filterbox \n          calculateProjection={this.props.calculateProjection}\n          settings={settings}\n          metadata={metadata}\n          currentProjection={this.props.currentProjection}\n          allFilter={this.props.allFilter}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(FilterPane)","import React, { Component, Fragment } from 'react'\nimport { Grid } from \"@material-ui/core\";\nimport uuid from 'react-uuid';\n\nclass InfoFields extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let {\n            metadata,\n            hover_index,\n            infos,\n        } = this.props;\n\n        const InfoList = infos.map((info) => \n            <Fragment>\n                <Grid key={uuid()} item xs={4}>\n                    {info}:\n                </Grid>\n                <Grid key={uuid()} item xs={8}>   \n                    {metadata[hover_index][info]}\n                </Grid>\n            </Fragment>\n        )\n\n        return (\n            <Grid key={uuid()} container justifyContent=\"space-between\" spacing={1} wrap=\"wrap\">    \n                <Grid key={uuid()} item xs={12}>   \n                    <b>{metadata[hover_index].Title}</b>\n                </Grid>\n                {InfoList}\n            </Grid>\n        );\n    }\n}\n\nexport default InfoFields","import React, { Component } from 'react'\nimport InfoFields from \"./InfoFields\";\n\nclass InfoPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n    };\n  }\n\n  render() {\n    let {\n      hover_index,\n      infos,\n      metadata,\n    } = this.props;\n\n    return (\n      <InfoFields\n      metadata={metadata}\n      hover_index={hover_index}\n      infos={infos}\n      />\n    )\n\n  }\n}\n\nexport default React.memo(InfoPane)\n","import React, { Component } from 'react'\nimport { Grid, Slider, Box } from \"@material-ui/core\";\n\nclass ViewPane extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dimensions: {},\n      checked: this.props.filterGrey\n    }\n  }\n\n  handleChange = () => {\n    this.setState(prevState => ({\n      checked: !prevState.checked\n    }));\n    this.props.handleChangeGrey(this.state.checked ? 1 : 0);\n  }\n\n  render() {\n    let {\n      clusters\n    } = this.props\n\n    return (\n      <Grid container spacing={1}>\n        \n          \n          <Grid item xs={4}>\n            clusters:\n          </Grid>\n          <Grid item xs={8}>\n            <select onChange={this.props.handleChangeCluster}>\n              <option key=\"0\" value=\"disabled\">-</option>\n              {clusters['clusterList'].map((option, index) => (\n              <option key={option} value={option}>\n                  {option.toLowerCase()}\n              </option>\n              ))}\n            </select> \n          </Grid>\n          <Grid item xs={4}>\n            size (out):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMin}\n            min={3}\n            max={60}\n            onChange={this.props.handleChangeScale}\n          />\n          </Box>\n          </Grid>\n          <Grid item xs={4}>\n          size (in):\n          </Grid>\n          <Grid item xs={8}>\n          <Box height={10}>\n          <Slider\n            size=\"small\"\n            defaultValue={this.props.scaleMax}\n            min={3}\n            max={120}\n            onChange={this.props.handleChangeZoom}\n          />\n          </Box>\n          </Grid>\n\n          <Grid item xs={11}>\n          show filtered-out items (slower):\n          </Grid>\n          <Grid item xs={1}>\n            <input type=\"checkbox\" \n            checked={this.state.checked} \n            onChange={this.handleChange}\n            />\n          </Grid>\n\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(ViewPane)\n","import React, { Component } from 'react'\nimport { Grid } from \"@material-ui/core\";\n\nclass MappingsPane extends Component {\n  constructor(props) {\n    super(props)\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this);\n    this.handleSelectDataset = this.handleSelectDataset.bind(this);\n  }\n\n  handleSelectAlgorithm(e) {\n    let v = e.target.value;\n    this.props.selectAlgorithm(v);\n  }\n\n  handleSelectDataset(e) {\n    let v = e.target.value;\n    this.props.selectDataset(v);\n  }\n\n  render() {\n    let {\n      algorithm_options,\n      algorithm_choice,\n      dataset_options,\n      selectedDataset,\n      datasetInfo\n    } = this.props;\n\n    return (\n      \n      <Grid container spacing={1}>\n          <Grid item xs={4}>\n            Dataset:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectDataset}\n              value={selectedDataset}\n            >\n              {dataset_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n\n          <Grid item xs={4}>\n            Projection:\n          </Grid>\n          <Grid item xs={8}>\n            <select className=\"full-width\"\n              onChange={this.handleSelectAlgorithm}\n              value={algorithm_options[algorithm_choice]}\n            >\n              {algorithm_options.map((option, index) => (\n              <option key={option} value={option}>\n                  {option}\n              </option>\n              ))}\n            </select>\n          </Grid>\n          <Grid item xs={12}>\n          <p className=\"info\">{datasetInfo}</p>\n          </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default React.memo(MappingsPane)","\nimport React, { Component } from 'react'\nimport { Button } from \"@material-ui/core\";\nimport { CSVLink } from \"react-csv\";\nimport canvasToImage from 'canvas-to-image';\n\n\nclass Export extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        filterDataToExportCSV:[],\n    }\n    }\n\n    makePNG = async () => {\n        console.log('download projection area as png')\n        canvasToImage(document.getElementById(\"threeCanvas\"));\n      }\n\n  \n\nrender() {\n    let {\n        metadata,\n        currentProjection\n      } = this.props;\n\n    return (\n        <><div style={{ marginBottom: \"12px\" }}>\n        <CSVLink \n            data={this.state.filterDataToExportCSV} \n            filename={\"CSN_filtered_metadata.csv\"} \n            target=\"_blank\"\n            onClick={() => {\n            let filteredMetadata = [];\n            for (let i=0;i<metadata.length;i++) {\n                if(currentProjection[i]===0){\n                var obj = metadata[i];\n                filteredMetadata.push(obj)\n                }\n            }\n            this.setState({filterDataToExportCSV: filteredMetadata});\n            }}                \n            >\n            <Button variant=\"contained\" fullWidth >Download metadata CSV</Button>\n            </CSVLink>\n            </div><div>\n                <Button variant=\"contained\" fullWidth onClick={this.makePNG}>Download projection PNG</Button>\n            </div></>\n\n    )\n\n\n}\n  \n    // // Release memory of export filter metadata\n    // if(this.state.filterDataToExportCSV.length>0) this.setState({filterDataToExportCSV: []});\n\n\n}\n\nexport default React.memo(Export)\n\n","import React, { Component } from 'react'\nimport * as THREE from 'three'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport * as TWEEN from '@tweenjs/tween.js'\nimport { CircularProgress } from \"@material-ui/core\";\n\nclass Projection extends Component {\n  constructor(props) {\n    super(props)\n    this.loadTiles()\n    this.state = {\n      tilesLoaded: 0,\n      view: null\n    }\n    this.init = this.init.bind(this)\n    this.pointsAr = []\n    this.addPoints = this.addPoints.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n    this.setupCamera = this.setupCamera.bind(this)\n    this.animate = this.animate.bind(this)\n    this.getScaleFromZ = this.getScaleFromZ.bind(this)\n    this.getZFromScale = this.getZFromScale.bind(this)\n    this.changeEmbeddings = this.changeEmbeddings.bind(this)\n  }\n\n  loadTiles(){ \n    this.sprite_size = this.props.settings.sprite_side * this.props.settings.sprite_side\n    this.tile_locations = [...Array(this.props.settings.sprite_number)].map(\n      (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.props.datasetDir}/tile_${i}.png`\n    )  \n    this.datasetIMG = this.tile_locations.map(src => {\n      let img = document.createElement('img')\n      img.src = src\n      return img\n    })\n  }\n\n  //changeEmbeddings(prev_choice, new_choice) {\n  changeEmbeddings(new_choice) {\n    let ranges = []\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size\n      let end = (i + 1) * this.sprite_size\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size\n      ranges.push([start, end])\n    }\n\n    let embedding_chunks = ranges.map(range =>\n      this.props.mappings[new_choice].slice(\n        range[0],\n        range[1]\n      )\n    )\n\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c]\n\n      let points = this.scene.children[0].children[c]\n      let numVertices = echunk.length\n\n      let position = points.geometry.attributes.position.array\n      let target = new Float32Array(numVertices * 3)\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0]\n        let y = echunk[i][1]\n        let z = 0\n        target[index] = x\n        target[index + 1] = y\n        target[index + 2] = z\n      }\n\n      let tween = new TWEEN.Tween(position)\n        .to(target, 1000)\n        .easing(TWEEN.Easing.Linear.None)\n      tween.onUpdate(function() {\n        points.geometry.attributes.position = new THREE.BufferAttribute(\n          position,\n          3\n        )\n        points.geometry.attributes.position.needsUpdate = true // required after the first render\n      })\n      tween.start();\n    }\n  }\n\n  zoomScaler(input) {\n    let scaleProj = d3\n    .scaleLinear()\n    .domain([20,0])\n    .range([this.props.scaleMin, this.props.scaleMax])\n    .clamp(true);\n    return scaleProj(input);\n  }\n\n  getZFromScale(scale) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let scale_height = this.props.height / scale;\n    let camera_z_position = scale_height / (2 * Math.tan(rvFOV / 2));\n    return camera_z_position;\n  }\n\n  getScaleFromZ(camera_z_position) {\n    let rvFOV = THREE.Math.degToRad(this.camera.fov);\n    let half_fov_height = Math.tan(rvFOV / 2) * camera_z_position;\n    let fov_height = half_fov_height * 2;\n    let scale = this.props.height / fov_height;\n    return scale;\n  }\n\n  handleResize = (width, height) => {\n    this.camera.aspect = width / height;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(width, height);\n    let current_scale = this.getScaleFromZ(this.camera.position.z);\n    let d3_x = -(this.camera.position.x * current_scale) + this.props.width / 2;\n    let d3_y = this.camera.position.y * current_scale + this.props.height / 2;\n    var resize_transform = d3.zoomIdentity\n      .translate(d3_x, d3_y)\n      .scale(current_scale);\n    let view = d3.select(this.mount);\n    this.d3_zoom.transform(view, resize_transform);\n  }\n\n  zoomHandler() {\n    let d3_transform = d3.event.transform;\n    let scale = d3_transform.k;\n    let x = -(d3_transform.x - this.props.width / 2) / scale;\n    let y = (d3_transform.y - this.props.height / 2) / scale;\n    let z = this.getZFromScale(scale);\n    this.camera.position.set(x, y, z);\n    // point size scales at end of zoom\n    let new_size = this.zoomScaler(z);\n    let point_group = this.scene.children[0].children;\n    for (let c = 0; c < point_group.length; c++) {\n      point_group[c].material.uniforms.size.value = new_size;\n    }\n  }\n\n  setupCamera() {\n    let { width, height, embeddings_data } = this.props\n\n    let vFOV = this.camera.fov\n    let rvFOV = THREE.Math.degToRad(vFOV)\n\n    let xs = embeddings_data.map(e => e[0])\n    let min_x = _.min(xs)\n    let max_x = _.max(xs)\n    let ys = embeddings_data.map(e => e[1])\n    let min_y = _.min(ys)\n    let max_y = _.max(ys)\n\n    let max_x_from_center = _.max([min_x, max_x].map(m => Math.abs(m)))\n    let max_y_from_center = _.max([min_y, max_y].map(m => Math.abs(m)))\n\n    let max_center = Math.max(max_x_from_center, max_y_from_center)\n\n    let camera_z_start\n    // if (data_aspect > aspect) {\n    //   // console.log(\"width is limiter\");\n    //   // camera_z_start = max_x_from_center / Math.tan(rvFOV / 2) / aspect\n    // } else {\n    //   // console.log(\"height is limiter\");\n    //   // camera_z_start = max_y_from_center / Math.tan(rvFOV / 2)\n    // }\n\n    camera_z_start = max_center / Math.tan(rvFOV / 2)\n\n    let far = camera_z_start * 1.25\n    this.camera.far = far\n    this.camera.position.z = camera_z_start * 1.1\n\n    // set up zoom\n    this.d3_zoom = d3\n      .zoom()\n      .scaleExtent([this.getScaleFromZ(far - 1), this.getScaleFromZ(0.1)])\n      .on('zoom', this.zoomHandler.bind(this))\n\n    let view = d3.select(this.mount)\n    this.view = view\n    view.call(this.d3_zoom)\n    let initial_scale = this.getScaleFromZ(this.camera.position.z)\n    var initial_transform = d3.zoomIdentity\n      .translate(width / 2, height / 2)\n      .scale(initial_scale)\n    this.d3_zoom.transform(view, initial_transform)\n    this.setState({ view: view })\n  }\n\n  addPoints() {\n    let { embeddings_data,metadata } = this.props;\n\n    // split embeddings and labels into chunks to match sprites\n    let ranges = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n    }\n    let embedding_chunks = ranges.map(range =>\n      embeddings_data.slice(range[0], range[1])\n    );\n\n    // load the textures\n    let loader = new THREE.TextureLoader();\n    this.textures = this.tile_locations.map(l => {\n      let t = loader.load(l,\n        function ( w ) {\n          this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n        }.bind(this)\n      )\n      t.flipY = false\n      t.magFilter = THREE.NearestFilter\n      return t\n    })  \n    let geometry;\n    let point_group = new THREE.Group();\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let echunk = embedding_chunks[c];\n      //let lchunk = label_chunks[c]\n\n      let vertices = [];\n      for (let v = 0; v < echunk.length; v++) {\n        let embedding = echunk[v];\n        let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n        vertices[v] = vert;\n      }\n\n      geometry = new THREE.BufferGeometry();\n\n      let numVertices = vertices.length;\n      console.log(\"numVertices -->\",numVertices)\n      let positionAr = new Float32Array(numVertices * 3);\n      let offsetAr = new Float32Array(numVertices * 2);\n      let clusterAr = new Float32Array(numVertices * 3);\n      let filterAr = new Float32Array(numVertices );\n      //let clustersActive = new Float32Array(numVertices );\n      geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n      geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n      geometry.addAttribute('filter', new THREE.BufferAttribute(filterAr, 1));\n      geometry.addAttribute('cluster', new THREE.BufferAttribute(clusterAr, 3));\n      //geometry.addAttribute('clusterActive', new THREE.BufferAttribute(clustersActive, 1));\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 3) {\n        let x = echunk[i][0];\n        let y = echunk[i][1];\n        let z = 0;\n        positionAr[index] = x;\n        positionAr[index + 1] = y;\n        positionAr[index + 2] = z;\n      }\n      // geometry.attributes.position.copyVector3sArray(vertices)\n\n      let texture_subsize = 1 / this.props.settings.sprite_side;\n\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 2) {\n        let x = ((i % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        let y =\n          (Math.floor(i / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / this.props.settings.sprite_actual_size\n        offsetAr[index] = x;\n        offsetAr[index + 1] = y;\n      }\n      if (this.props.settings.clusters.clusterList) {\n        // Todo: connect cluster the array\n        let clusterSelected = this.props.clusterTypeSelected;\n        let clusterColors = this.props.settings.clusters.clusterColors;\n        console.log(\"clusterSelected\",clusterSelected)\n        for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          // Images disable when are not visible\n          filterAr[index] = 0.0;// default value to show all images\n\n          // Clusters visualization\n\n          if( clusterSelected !== \"-\" && this.props.settings.clusters.clusterList.includes(clusterSelected) ){ \n              let clusterId = metadata[index][clusterSelected];\n              if(clusterId >= clusterColors.length){\n                clusterAr[index*3] = 1.0;\n                clusterAr[index*3 + 1] = 1.0;\n                clusterAr[index*3 + 2] = 1.0;\n              }else{\n                clusterAr[index*3] = clusterColors[clusterId][0];\n                clusterAr[index*3 + 1] = clusterColors[clusterId][1];\n                clusterAr[index*3 + 2] = clusterColors[clusterId][2];\n              }\n          }\n      }\n    }\n      // uniforms\n      let uniforms = {\n        texture: { value: this.textures[c] },\n        repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n        size: { value: this.props.settings.sprite_image_size },\n        greyTransparency:{ value:0.1},\n        imageTransparency:{ value:1.0},\n        clusterActive:{ value:0.0}\n      };\n\n      let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        attribute vec3 cluster;\n        varying vec3 vCluster;\n        attribute float filteredActive;\n        varying float vFilteredActive;\n        uniform float clusterActive;\n        varying float vClusterActive;\n        uniform float size;\n        uniform float greyTransparency;\n        varying float vGreyTransparency;\n        uniform float imageTransparency;\n        varying float vImageTransparency;\n\n        void main() {\n          vOffset = offset;\n          vFilteredActive = filteredActive;\n          vCluster = cluster;\n          vClusterActive = clusterActive;\n          vGreyTransparency = greyTransparency;\n          vImageTransparency = imageTransparency;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n      let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        varying vec3 vCluster;\n        varying float vClusterActive;\n        varying float vFilteredActive;\n        varying float vGreyTransparency;\n        varying float vImageTransparency;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          // make transparent images\n          if ( tex.a < 0.003 ) discard;\n\n          // Display clusters\n          vec4 replace_color = vec4(vCluster,1.0);\n          vec4 default_border_color = vec4(0.00392156863,0.00392156863,0.00392156863,0.00392156863);\n          vec4 diff = tex - default_border_color;\n          float equality = float(dot(diff,diff) < 0.99 && vClusterActive > 0.9);\n          tex = mix( tex, replace_color, equality);\n           \n          // make transparent images\n          tex = mix( tex,  vec4(0.0,0.0,0.0,0.0), vImageTransparency);\n\n          // Grey images filter our selection \n          vec4 filterout_color = vec4(0.3,0.3,0.3,vGreyTransparency);\n          float filterout_equality = float(vFilteredActive > 0.9);\n          tex = mix( tex, filterout_color, filterout_equality );\n          gl_FragColor = tex; //* vec4(vColor, 1.0);\n        }`;\n\n      // material\n      let material = new THREE.ShaderMaterial({\n        uniforms: uniforms,\n        vertexShader: vertex_shader,\n        fragmentShader: fragment_shader,\n        transparent: true\n      });\n\n      // point cloud\n      let point_cloud = new THREE.Points(geometry, material);\n      point_cloud.userData = { sprite_index: c };\n      this.pointsAr.push(point_cloud);\n      // console.log(\"new points\")\n      point_group.add(point_cloud);\n    }\n    this.scene.add(point_group);\n  }\n\n  addBlankHighlightPoints() {\n    let hover_container = new THREE.Group();\n    this.scene.add(hover_container);\n\n    let vert = new THREE.Vector3(0, 0, 0);\n    let vertices = [vert];\n    let geometry = new THREE.BufferGeometry();\n    let numVertices = vertices.length;\n    var positionAr = new Float32Array(numVertices * 3); // 3 coordinates per point\n    var offsetAr = new Float32Array(numVertices * 2); // 2 coordinates per point\n    geometry.addAttribute('position', new THREE.BufferAttribute(positionAr, 3));\n    geometry.addAttribute('offset', new THREE.BufferAttribute(offsetAr, 2));\n\n    // all the attributes will be filled on hover\n    let texture_subsize = 1 / this.props.settings.sprite_side;\n\n    // uniforms\n    let uniforms = {\n      texture: { value: this.textures[0] },\n      repeat: { value: new THREE.Vector2(texture_subsize, texture_subsize) },\n      size: { value: 84.0 }, //56\n    };\n\n    let vertex_shader = `\n        attribute vec2 offset;\n        varying vec2 vOffset;\n        uniform float size;\n        void main() {\n          vOffset = offset;\n          gl_PointSize = size;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`;\n\n    let fragment_shader = `\n        uniform sampler2D texture;\n        uniform vec2 repeat;\n        varying vec2 vOffset;\n        void main() {\n          vec2 uv = vec2( gl_PointCoord.x, gl_PointCoord.y );\n          vec4 tex = texture2D( texture, uv * repeat + vOffset );\n          gl_FragColor = tex;\n        }`;\n\n    // material\n    var material = new THREE.ShaderMaterial({\n      uniforms: uniforms,\n      vertexShader: vertex_shader,\n      fragmentShader: fragment_shader,\n      transparent: true,\n    });\n\n    let point = new THREE.Points(geometry, material);\n    point.frustumCulled = false;\n\n    this.scene.children[1].visible = false;\n    this.scene.children[1].add(point);\n  }\n\n  // filter images - update color of images to get inactive (grey) or active images\n  updateProjection=(ar)=>{\n    this.filterAr = ar;\n    let ranges = [];\n    let ar_sliced = [];\n    for (let i = 0; i < this.props.settings.sprite_number; i++) {\n      let start = i * this.sprite_size;\n      let end = (i + 1) * this.sprite_size;\n      if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n      ranges.push([start, end]);\n      ar_sliced.push(ar.slice(start, end));\n    }\n    // \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      points.geometry.attributes.filteredActive = new THREE.BufferAttribute(\n        ar_sliced[c],\n        1\n      );\n      points.geometry.attributes.filteredActive.needsUpdate = true;\n    }\n    // let point = this.scene.children[0].children[0]\n    // console.log(point.geometry);\n  }\n\n  updatePass2Shader=(num)=>{\n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if(num===1){\n        points.material.uniforms.greyTransparency.value = 0.1;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 1.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n      if(num===2){\n        points.material.uniforms.greyTransparency.value = 0.0;\n        points.material.uniforms.greyTransparency.needsUpdate = true;\n        points.material.uniforms.imageTransparency.value = 0.0;\n        points.material.uniforms.imageTransparency.needsUpdate = true;\n      }\n    }\n  }\n\n  updateClusterColors=(clusterSelected)=>{\n    console.log('updateClusterColors',clusterSelected);\n    \n    let numVertices =  this.props.metadata.length;//this.props.settings.sprite_number * this.sprite_size;\n    console.log(\"clusterSelected:\",clusterSelected, \"numVertices Update -->\",numVertices, ' metadata.length:', this.props.metadata.length)\n    let clusters = new Float32Array(numVertices * 3);\n    //let clustersActive = new Float32Array(numVertices );\n    let clusterColors = this.props.settings.clusters.clusterColors;\n    console.log(numVertices,clusterSelected !==\"-\",this.props.settings.total,clusterColors);\n    \n    let ranges = [];\n    // let clustersActiveAr_sliced = [];\n    let clustersAr_sliced = [];\n\n    if( clusterSelected !==\"disabled\" ){\n      for (let i = 0, index = 0, l = numVertices; i < l; i++, index += 1) {\n          let clusterId = this.props.metadata[index][clusterSelected];\n          if(clusterId>=clusterColors.length){\n            clusters[index*3] = 1.0;\n            clusters[index*3 + 1] = 1.0;\n            clusters[index*3 + 2] = 1.0;\n          }else{\n            clusters[index*3] = clusterColors[clusterId][0];\n            clusters[index*3 + 1] = clusterColors[clusterId][1];\n            clusters[index*3 + 2] = clusterColors[clusterId][2];\n          }\n      }\n\n      for (let i = 0; i < this.props.settings.sprite_number; i++) {\n        let start = i * this.sprite_size;\n        let end = (i + 1) * this.sprite_size;\n        if (i === this.props.settings.sprite_number - 1) end = this.props.settings.sprite_number * this.sprite_size;\n        ranges.push([start, end]);\n        clustersAr_sliced.push(clusters.slice(start*3, end*3));\n      }\n    }\n    \n    for (let c = 0; c < this.props.settings.sprite_number; c++) {\n      let points = this.scene.children[0].children[c];\n      if( clusterSelected !==\"disabled\" ){\n        points.geometry.attributes.cluster = new THREE.BufferAttribute(\n          clustersAr_sliced[c],\n          3\n        );\n        points.geometry.attributes.cluster.needsUpdate = true;\n        \n        points.material.uniforms.clusterActive.value = 1.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }else{\n        points.material.uniforms.clusterActive.value = 0.0;\n        points.material.uniforms.clusterActive.needsUpdate = true;\n      }\n    }\n\n\n  }\n\n  highlightPoint(sprite_index, digit_index, full_index) {    \n    let { algorithm_choice, mappings } = this.props;\n\n    let point = this.scene.children[1].children[0];\n\n    // console.log(mappings[algorithm_choice][full_index]);\n    let embedding = mappings[algorithm_choice][full_index];\n\n    let vert = new THREE.Vector3(embedding[0], embedding[1], 0);\n    let vertices = [vert];\n\n    var offsets = new Float32Array(2); // 2 coordinates per point\n\n    let x = ((digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    let y = (Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size) / 2048;\n    offsets[0] = x;\n    offsets[1] = y;\n\n    point.geometry.attributes.position.copyVector3sArray(vertices);\n    point.geometry.attributes.position.needsUpdate = true; // required after the first render\n    point.geometry.attributes.offset.array = offsets;\n    point.geometry.attributes.offset.needsUpdate = true; // required after the first render\n\n    // need to set attributes on geometry and uniforms on material\n    point.material.uniforms.texture.value = this.textures[sprite_index];\n  }\n\n  removeHighlights() {\n    let highlight_container = this.scene.children[1];\n    let highlights = highlight_container.children;\n    highlight_container.remove(...highlights);\n  }\n\n  checkIntersects(mouse_position) {\n    let { width, height, previewPane_ctx, previewPane_image_size } = this.props;\n\n    function mouseToThree([mouseX, mouseY]) {\n      return new THREE.Vector3(\n        (mouseX / width) * 2 - 1,\n        -(mouseY / height) * 2 + 1,\n        1\n      );\n    }\n\n    function sortIntersectsByDistanceToRay(intersects) {\n      return _.sortBy(intersects, 'distanceToRay');\n    }\n\n    let mouse_vector = mouseToThree(mouse_position);\n    this.raycaster.setFromCamera(mouse_vector, this.camera);\n    this.raycaster.params.Points.threshold = 0.25;\n    let intersects = this.raycaster.intersectObjects(\n      this.scene.children[0].children\n    );\n    if (intersects[0]) {\n      let sorted_intersects = sortIntersectsByDistanceToRay(intersects);\n      let intersect = sorted_intersects[0];\n      let sprite_index = intersect.object.userData.sprite_index;\n      let digit_index = intersect.index;\n      let full_index = sprite_index * this.sprite_size + digit_index;\n      // if filter is null then allow selected all, then when filter is defined only allow visible image to be selected\n      if( this.filterAr===undefined || this.filterAr[full_index]<1.0){\n        this.props.setHoverIndex(full_index);\n        // console.log(full_index)\n        this.highlightPoint(sprite_index, digit_index, full_index);\n        this.scene.children[1].visible = true;\n        previewPane_ctx.clearRect(0, 0,  previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n        previewPane_ctx.fillStyle = \"transparent\";\n        try{\n          previewPane_ctx.drawImage(\n            this.datasetIMG[sprite_index],\n            // source rectangle\n            (digit_index % this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            Math.floor(digit_index / this.props.settings.sprite_side) * this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            this.props.settings.sprite_image_size,\n            // destination rectangle\n            0,\n            0,\n            previewPane_image_size,\n            previewPane_image_size\n          );\n        }catch (error){\n          console.log(\"previewPane_ctx.drawImage\",error);\n        }\n      }\n    } else {\n      this.props.setHoverIndex(null);\n      this.scene.children[1].visible = false;\n      previewPane_ctx.fillRect(0, 0, previewPane_image_size, previewPane_image_size);\n      previewPane_ctx.fillStyle = \"transparent\";\n    }\n  }\n\n  handleMouse() {\n    let view = d3.select(this.renderer.domElement);\n    this.raycaster = new THREE.Raycaster();\n\n    view.on('mousemove', () => {\n      let [mouseX, mouseY] = d3.mouse(view.node());\n      let mouse_position = [mouseX, mouseY];\n      this.checkIntersects(mouse_position);\n    })\n    \n    view.on('dblclick', () => {\n      if(this.scene.children[1].visible) this.props.clickOnImage();\n    })\n  }\n\n  init() {\n    let { width, height } = this.props;\n    this.scene = new THREE.Scene();\n    let vFOV = 75;\n    let aspect = width / height;\n    let near = 0.01;\n    let far = 1000;\n\n    this.camera = new THREE.PerspectiveCamera(vFOV, aspect, near, far);\n\n    this.renderer = new THREE.WebGLRenderer({ preserveDrawingBuffer: true,alpha: true });\n    this.renderer.setClearColor(0xffffff, 0);\n    this.renderer.autoClear = false;\n    this.renderer.setSize(width, height);\n    this.renderer.domElement.id = \"threeCanvas\";\n    this.mount.appendChild(this.renderer.domElement);\n\n    this.addPoints();\n    this.addBlankHighlightPoints();\n    this.setupCamera();\n    this.animate();\n    this.handleMouse();\n    this.changeEmbeddings(this.props.algorithm_choice);\n  }\n\n  animate() {\n    requestAnimationFrame(this.animate);\n    TWEEN.update();\n    this.renderer.clear()\n    // 1-Pass :: Render filtered images (grey semi-transparent images that create a shadow behind)\n    if(parseInt(this.props.greyRenderTypeSelected)===0){\n      this.updatePass2Shader(1)\n      this.renderer.render(this.scene, this.camera);\n    }\n    // 2-Pass - Render all images\n    this.updatePass2Shader(2)\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { width, height } = this.props;\n    if (width !== prevProps.width || height !== prevProps.height) {\n      this.handleResize(width, height);\n    }\n    \n    if (prevProps.algorithm_choice !== this.props.algorithm_choice) {\n      this.changeEmbeddings(\n        //prevProps.algorithm_choice,\n        this.props.algorithm_choice,\n      );\n    }\n    \n    if (this.props.scaleMin !== prevProps.scaleMin || this.props.scaleMax !== prevProps.scaleMax){\n      this.handleResize(width, height);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  render() {\n    let { width, height } = this.props;\n    const tileProgress = this.state.tilesLoaded;\n    const allTiles = this.props.settings.sprite_number;\n    return (\n      <><div>\n        {tileProgress < 1 ? <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading tiles...</div></div> : \n        tileProgress < allTiles-1 ? <div className=\"loading-small\"><CircularProgress color=\"inherit\"/><div>loading...</div></div> : \n        ''\n      }\n      </div><div\n          style={{ width: width, height: height, overflow: 'hidden' }}\n          ref={mount => {\n            this.mount = mount\n          } } /></>\n    ) \n  }\n}\n\nexport default React.memo(Projection)\n\n\n","import React, { Component } from 'react'\nimport PreviewPane from './PreviewPane'\nimport SliderPane from './SliderPane'\nimport FilterPane from './FilterPane'\nimport InfoPane from './InfoPane'\nimport ViewPane from './ViewPane'\nimport MappingsPane from './MappingsPane'\nimport Export from './Export'\nimport { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport './scss/Menu.scss';\nimport Projection from './Projection'\nimport * as _ from 'lodash'\nimport { CircularProgress } from \"@material-ui/core\";\nimport { FaDatabase, FaSlidersH, FaSearch, FaCloudDownloadAlt, FaAngleDoubleLeft, FaAngleDoubleRight, FaRegImage, FaInfo, FaQuestion, FaEye } from \"react-icons/fa\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props)\n    let total = this.props.settings[\"total\"]\n    this.state = {\n      ww: null,\n      wh: null,\n      hover_index: 0,\n      previewPane_height: null,\n      controlPane_height: null,\n      filterPane_height: null,\n      algorithm_choice: null,\n      allFilter: {},\n      currentProjection: new Float32Array(total).fill(0),\n      currentFilter: new Float32Array(total).fill(0),\n      currentSearch: new Float32Array(total).fill(0),\n      scaleMin: 14,\n      scaleMax: 70,\n      filterGrey: true,\n      clusterTypeSelected:'-',\n      greyRenderTypeSelected:0,\n      dimensions: {},\n      collapsedControl: false,\n      collapsedObject: false\n    }\n    this.previewPane_ctx = null;\n    this.setSize = _.debounce(this.setSize.bind(this), 200);\n    this.setPreviewPaneCanvas = this.setPreviewPaneCanvas.bind(this);\n    this.setPreviewImage = this.setPreviewImage.bind(this);\n    this.selectAlgorithm = this.selectAlgorithm.bind(this);\n    this.selectDataset = this.selectDataset.bind(this);\n    this.toggleControl = this.toggleControl.bind(this);\n    this.refProjection = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setDefaults();\n    this.selectAlgorithm(this.props.algorithm_name);\n    this.setSize();\n    window.addEventListener('resize', this.setSize);\n  }\n\n  setDefaults(){\n    if (this.props.settings[\"total\"] < 20000) {\n      this.setState( { scaleMin: 15, filterGrey: true, greyRenderTypeSelected: 0 } )\n    } else {\n      this.setState( { scaleMin: 5, filterGrey: false, greyRenderTypeSelected: 1 } )\n    }\n  }\n\n  setRenderer(renderer){\n    this.setState( { renderer: renderer});\n  }\n\n  handleChangeScale(e,val) {\n    this.setState({ scaleMin: val})\n  }\n\n  handleChangeZoom(e,val) {\n    this.setState({ scaleMax: val})\n  }\n\n  handleChangeCluster(e) {\n    let value = e.target.value;\n    this.setState({ clusterTypeSelected: parseInt(value)})\n    console.log(e.target)\n    try{\n      this.refProjection.current.updateClusterColors(value)\n    } catch(error) {console.log(\"error updateClusterColors\")}\n  }\n\n  handleChangeGrey(value) {\n    this.setState({ greyRenderTypeSelected: value})\n  }\n\n  calculateProjection=(newArr,type, update)=>{\n    let A, B, arr;\n    if(type===\"filter\"){\n      this.setState({currentFilter: newArr})\n      A = newArr;\n      B = this.state.currentSearch;\n    }\n    if(type===\"search\"){\n      this.setState({currentSearch: newArr});\n      A = this.state.currentFilter;\n      B = newArr;\n    }\n    if(update){\n      arr = A.map((x, idx) => x + B[idx]);\n      this.setState({currentProjection: arr});\n    } else {\n      arr = newArr;\n    }\n    try{\n      this.refProjection.current.updateProjection(arr);\n    } catch(error) {}\n    }\n\n  selectAlgorithm(v) {\n    let i = this.props.algorithm_options.indexOf(v);\n    if(i<0) i = 0;\n    this.setState({ algorithm_choice: i });\n    // Save algorithm in URL parameters\n    this.props.addToUrl('projection',this.props.algorithm_options[i]);\n  }\n\n  selectDataset(p) {\n    this.props.changeDataset(p);\n  }\n\n  setSize() {\n    this.setState({ ww: window.innerWidth, wh: window.innerHeight });\n    let previewPane_height = this.previewPane_mount.offsetHeight;\n    this.setState({ previewPane_height: previewPane_height });\n    if (this.previewPane_ctx) this.previewPane_ctx.imageSmoothingEnabled = false;\n    if ( window.innerWidth < 900) {\n      this.setState({ collapsedControl: true, collapsedObject: true })\n    } else {\n      this.setState({ collapsedControl: false, collapsedObject: false })\n\n    }\n  }\n\n  setPreviewPaneCanvas(canvas) {\n    let ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = false;\n    this.previewPane_ctx = ctx;\n    console.log(ctx);\n  }\n\n  setPreviewImage() {\n      return (\n      <img\n      src={ this.props.settings.url_prefix + this.props.metadata[this.state.hover_index].Filename }\n      alt=\"preview\"\n      style={{\n        verticalAlign: \"middle\",\n      }}\n      />)\n  }\n\n\n  setHoverIndex(hover_index) {\n    if (hover_index){\n      this.setState({ hover_index: hover_index });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setSize);\n  }\n\n  clickOnImage(){\n    console.log(\"open image\",this.state.hover_index);\n    try{\n      let url = this.props.metadata[this.state.hover_index].link_URL\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }catch(err){}\n  }\n\n  toggleControl = () => {\n    this.setState({ collapsedControl: !this.state.collapsedControl \n  })}\n  \n  toggleObject = () => {\n    this.setState({ collapsedObject: !this.state.collapsedObject \n  })}\n\n\n  render() {\n    let {\n      embeddings_data,\n      mappings,\n      algorithm_options,\n      dataset_options,\n      metadata,\n      settings,\n      barData\n    } = this.props;\n\n    let {\n      ww,\n      wh,\n      hover_index,\n      algorithm_choice,\n      currentProjection,\n      allFilter,\n      greyRenderTypeSelected,\n      clusterTypeSelected,\n      collapsedControl,\n      collapsedObject\n    } = this.state;\n\n    let previewPane_ctx = this.previewPane_ctx;\n    \n    let line_height = 1.5;\n\n    let previewPane_style = {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // width: 320,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n    let controlMenu_style = {\n      position: 'absolute',\n      right: 0,\n      top: 0,\n      // width: 300,\n      // left:ww-350,\n      height: 'auto',\n      maxHeight: '100vh',\n      overflow: 'auto',\n      background: '#222',\n      zIndex: 8\n    };\n\n    let main_style = {\n      position: 'relative',\n      background: '#111',\n      overflow: 'hidden',\n      width: ww, \n      height: wh\n    };\n\n    let previewPane_image_size = '320px';\n    let font_size = 16;\n\n    let grem = font_size * line_height;\n\n    let general_style = {\n      fontSize: font_size,\n      lineHeight: line_height,\n    };\n\n    let displayNumb = 0;\n    for(let i=0;i<settings.total;i++){\n      if(currentProjection[i]===0){\n        displayNumb++;\n      }\n    }\n\n\n    return ww !== null ? (\n      <div style={general_style}>\n        <div\n          style={controlMenu_style}\n          ref={controlMenu_mount => {\n            this.controlMenu_mount = controlMenu_mount\n          }}\n        >\n          <div>\n          <ProSidebar collapsed={collapsedControl}>\n            <Menu iconShape='square'>\n            <MenuItem>\n            <h3></h3>\n            <a className=\"collapseCon\" onClick={this.toggleControl}>{collapsedControl ? < FaAngleDoubleLeft />  : < FaAngleDoubleRight /> }</a>\n            </MenuItem>\n\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Data & Projections\"}  \n              icon={collapsedControl ? < FaDatabase />  : null }\n              >\n              <MenuItem>\n              <MappingsPane\n                grem={grem}\n                algorithm_options={algorithm_options}\n                algorithm_choice={algorithm_choice}\n                selectAlgorithm={this.selectAlgorithm}\n                dataset_options={dataset_options}\n                selectDataset={this.selectDataset}\n                selectedDataset={this.props.selectedDataset}\n                datasetInfo={settings[\"datasetInfo\"]}\n              />\n              </MenuItem>\n              </SubMenu>\n              <SubMenu defaultOpen\n              title={collapsedControl ? null : \"Dimension Filters\"}  \n              icon={collapsedControl ? <FaSlidersH />  : null }\n              >\n\n\n                <MenuItem>\n                <SliderPane\n                grem={grem}\n                metadata={metadata}\n                hover_index={hover_index}\n                settings={settings}\n                barData={barData}\n                calculateProjection={this.calculateProjection}\n                currentProjection={currentProjection}\n                allFilter={allFilter}\n                />\n                </MenuItem>\n                </SubMenu>\n\n                <SubMenu\n                title={collapsedControl ? null : \"Advanced Filters\"}  \n                icon={collapsedControl ? < FaSearch />  : null }\n                >\n\n                <MenuItem>\n                  <FilterPane\n                    grem={grem}\n                    calculateProjection={this.calculateProjection}\n                    hover_index={hover_index}\n                    settings={settings}\n                    metadata={metadata}\n                    currentProjection={currentProjection}\n                    allFilter={allFilter}\n                  />\n                </MenuItem>\n              </SubMenu>\n              <SubMenu\n                title={collapsedControl ? null : \"Export Filtered Data\"}  \n                icon={collapsedControl ? <FaCloudDownloadAlt />  : null }\n                >\n\n              <MenuItem>\n                <Export\n                metadata = {metadata}\n                currentProjection = {currentProjection}\n                />\n              </MenuItem>\n            </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>    \n\n        <div\n          style={previewPane_style}\n          ref={previewPane_mount => {\n            this.previewPane_mount = previewPane_mount\n          }}\n        >\n\n        <div>\n          <ProSidebar collapsed={collapsedObject}>\n            <Menu iconShape='square'>   \n            <MenuItem>\n            {collapsedObject ? <h3></h3> : <h3>Collection Space Navigator</h3> }\n            <a className='collapseObj' onClick={this.toggleObject}>{collapsedObject ? < FaAngleDoubleRight />  : < FaAngleDoubleLeft /> }</a>\n            </MenuItem>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Preview\"}  \n                icon={collapsedObject ? <FaRegImage />  : null }\n                >  \n                <PreviewPane\n                  previewPane_image_size={previewPane_image_size}\n                  setPreviewPaneCanvas={this.setPreviewPaneCanvas}\n                  setPreviewImage={this.setPreviewImage}\n                  hover_index={hover_index}\n                />\n              </SubMenu>\n              <SubMenu defaultOpen\n                title={collapsedObject ? null : \"Object Info\"}  \n                icon={collapsedObject ? <FaInfo />  : null }\n                >  \n                <MenuItem>\n                <InfoPane\n                  hover_index={hover_index}\n                  metadata={metadata}\n                  infos={settings.info}\n                />\n                </MenuItem>\n              </SubMenu>\n\n              <SubMenu\n                title={collapsedObject ? null : \"Object Appearance\"}  \n                icon={collapsedObject ? <FaEye />  : null }\n                > \n                <MenuItem>\n                <ViewPane\n                  clusters={settings.clusters}\n                  scaleMin={this.state.scaleMin}\n                  scaleMax={this.state.scaleMax}\n                  filterGrey={this.state.filterGrey}\n                  handleChangeScale = {this.handleChangeScale.bind(this)}\n                  handleChangeZoom = {this.handleChangeZoom.bind(this)}\n                  handleChangeCluster = {this.handleChangeCluster.bind(this)}\n                  handleChangeGrey = {this.handleChangeGrey.bind(this)}\n                  total = {settings.total}\n                />\n                </MenuItem>\n                <MenuItem>\n                <div className='info'>showing {displayNumb} / {settings.total}</div>\n              </MenuItem>\n              </SubMenu>\n\n            <SubMenu\n              title={collapsedObject ? null : 'About'}  \n              icon={collapsedObject ? <FaQuestion />  : null }\n              >         \n              <div className='about'>\n                The Collection Space Navigator (CSN) is an <strong>interactive visualization interface for multidimensional datasets</strong>.\n                It functions as an explorative visualization tool for researching collections and their multidimensional representations. \n                We designed this tool to better understand multidimensional data, its methods, and semantic qualities through spatial navigation and filtering. \n                CSN can be used with any image collection and can be customized for specific research needs. <a href=\"https://github.com/Collection-Space-Navigator/CSN\" target=\"_blank\" rel=\"noreferrer\" ><strong>[more on GitHub...]</strong></a>\n              </div>\n              </SubMenu>\n            </Menu>\n          </ProSidebar>\n          </div>\n        </div>\n        <div style={main_style}>\n          <Projection\n            ref={this.refProjection}\n            width={main_style.width}\n            height={main_style.height}\n            embeddings_data={embeddings_data}\n            mappings={mappings}\n            metadata={metadata}\n            previewPane_ctx={previewPane_ctx}\n            previewPane_image_size={previewPane_image_size}\n            setHoverIndex={this.setHoverIndex.bind(this)}\n            algorithm_choice={algorithm_choice}\n            datasetDir={this.props.datasetDir}\n            clusterTypeSelected={clusterTypeSelected}\n            greyRenderTypeSelected={greyRenderTypeSelected}\n            settings={settings}\n            initPath={this.props.initPath}\n            scaleMin={this.state.scaleMin}\n            scaleMax={this.state.scaleMax}\n            currentProjection={currentProjection}\n            clickOnImage={this.clickOnImage.bind(this)}\n            // tiles={this.tiles}\n          />\n        </div>\n      </div>\n      \n    ) : (\n      <div className=\"loading\"><CircularProgress color=\"inherit\"/><div>loading layout...</div></div>\n    )\n  }\n}\n\nexport default Layout\n\n\n\n","import React, { Component } from 'react'\nimport {useParams, useNavigate} from \"react-router-dom\";\nimport Layout from './Layout'\nimport * as _ from 'lodash'\nimport * as d3 from 'd3'\nimport color from 'color'\n// import * as THREE from 'three'\nimport { CircularProgress } from \"@material-ui/core\";\n\n\nfunction withRouter(Component) {\n  return props => <Component {...props} params={useParams()} navigate={useNavigate()} />;\n}\n\nclass Data extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // tilesLoaded: 0,\n      algorithm_options: null,\n      dataset_options: null,\n      dataset_dirs: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata:null,\n      defaultDataset:null,\n      algorithm_name:0\n    };\n  }\n\n  scaleEmbeddings(embeddings) {\n    let xs = embeddings.map(e => Math.abs(e[0]));\n    let ys = embeddings.map(e => Math.abs(e[1]));\n    let max_x = _.max(xs);\n    let max_y = _.max(ys);\n    let max = Math.max(max_x, max_y);\n    let scale = d3\n      .scaleLinear()\n      .domain([-max, max])\n      .range([-20, 20]);\n    let scaled_embeddings = embeddings.map(e => [scale(e[0]), scale(e[1])]);\n    return scaled_embeddings;\n  }\n  \n  componentDidMount() {\n    // Get parameters from URL and save to settings\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    this.setState({ selectedDataset: urlParams.get('dataset')});\n    if(urlParams.get('projection')!==undefined) this.setState({algorithm_name:urlParams.get('projection')});\n    // Load embeddings\n    this.loadInit('datasets/datasets_config.json')\n  }\n\n  loadConfig(path){\n    this.loadSettings(`datasets/${path}/config.json`);\n    this.loadBarData(`datasets/${path}/barData.json`);\n    this.loadMetadata(`datasets/${path}/metadata.json`);\n  }\n  \n  prepareMappings(ID){\n    let algorithm_options = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      algorithm_options[i] = this.state.settings.embeddings[i].name;\n    }\n    this.setState({ algorithm_options: algorithm_options });\n  }\n\n  loadDataset(ID){\n    let mappings = [];\n    const embeddings = this.state.settings.embeddings;\n    for (let i in embeddings) {\n      // console.log(embeddings[i].key);\n      fetch(`${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/${embeddings[i].file}`)\n        .then(response => response.json())\n        .then(embeddings_data => {\n          let scaled_embeddings = embeddings_data;\n          // this.scaleEmbeddings(embeddings_data);\n          mappings[i] = scaled_embeddings;\n        }\n        )\n        .then(() => {\n          this.setState({ mappings: mappings, embeddings_data: mappings[0] })\n        })\n  }\n}\n\n  // loadTiles(){ \n  //   const tile_locations = [...Array(this.state.settings.sprite_number)].map(\n  //     (n, i) => `${process.env.PUBLIC_URL}/datasets/${this.state.datasetDir}/tile_${i}.png`\n  //   )\n  //   let loader = new THREE.TextureLoader();\n  //   this.tiles = tile_locations.map(l => {\n  //     let t = loader.load(l,\n  //       function ( texture ) {\n  //         this.setState({ tilesLoaded: this.state.tilesLoaded+1 });\n  //       }.bind(this)\n  //     )\n  //     t.flipY = false\n  //     t.magFilter = THREE.NearestFilter\n  //     return t\n  //   })    \n  // }\n\n\n  addToUrl(paramName,value){\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    urlParams.set(paramName, value);\n    this.props.navigate(\"?\"+urlParams.toString());\n  }\n\n  prepareDatasets(ID){\n    let dataset_options = [];\n    let dataset_dirs = [];\n    for (let i in this.state.settings.embeddings) {\n      console.log(this.state.settings.embeddings[i].name);\n      dataset_options[i] = this.state.settings.embeddings[i].name;\n      dataset_dirs[i] = this.state.settings.embeddings[i].directory;\n    }\n    this.setState({ dataset_options: dataset_options, dataset_dirs: dataset_dirs });\n  }\n\n  changeDataset(choice){\n    this.addToUrl('dataset',choice);\n    let k = this.state.dataset_options.indexOf(choice);\n    let newDataset = this.state.dataset_dirs[k]\n    this.setState({ \n      selectedDataset: choice, \n      datasetDir: newDataset,\n      algorithm_options: null,\n      embeddings_data: null,\n      mappings: null,\n      metadata: null\n    });\n    this.loadConfig(newDataset);\n  }\n\n  loadInit(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(init =>{\n        let dataset_options = [];\n        let dataset_dirs = [];\n        for (let i in init.data) {\n          console.log(init.data[i].directory);\n          dataset_options[i] = init.data[i].name;\n          dataset_dirs[i] = init.data[i].directory;\n        }\n        this.setState({ dataset_options: dataset_options,dataset_dirs: dataset_dirs});\n        // Select dataset folder from defined in URL parameters\n        if(this.state.selectedDataset===null){\n          this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n          this.addToUrl('dataset',init.data[init.default].name);\n        }else{\n          let foundInitDataset = false;\n          for (let i in init.data) {\n            if(init.data[i].name===this.state.selectedDataset){\n              this.setState({datasetDir: init.data[i].directory});\n              foundInitDataset = true;\n            } \n          }\n          if(!foundInitDataset) this.setState({ selectedDataset: init.data[init.default].name,  datasetDir: init.data[init.default].directory});\n        }\n      }\n      )\n      .then(()=> \n      this.loadConfig(this.state.datasetDir))\n\n  }\n\n  loadSettings(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(settings =>{\n        // Convert colors from rgb(255,0,0) to array [1.0,0.0,0.0]\n        try{\n          const floatColorConvertedArr = settings.clusters.clusterColors.map(myColorFunction);\n          function myColorFunction(value) {\n            return [color(value).rgb().array()[0]/255,color(value).rgb().array()[1]/255,color(value).rgb().array()[2]/255];\n          }\n          settings.clusters.clusterColors = floatColorConvertedArr;\n        }catch(error){}\n        // Save settings to \n        this.setState({\n          settings: settings\n        });\n      }\n      )\n      .then(() =>\n      this.prepareMappings(0))\n      .then(()=> \n      this.loadDataset(0))\n      // .then(()=> \n      // this.loadTiles())\n  }\n\n  loadMetadata(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(metadata =>\n        this.setState({\n          metadata: metadata,\n        })\n      )\n  }\n\n  loadBarData(file){\n    fetch(`${process.env.PUBLIC_URL}/`+file)\n      .then(response => response.json())\n      .then(barData =>\n        this.setState({\n          barData: barData,\n        })\n      )\n  }\n\n\n  render() {\n    return this.state.embeddings_data && this.state.metadata ? (\n\n      <Layout\n        {...this.state}\n        addToUrl={this.addToUrl.bind(this)}\n        algorithm_name={this.state.algorithm_name}\n        algorithm_options={this.state.algorithm_options}\n        dataset_options={this.state.dataset_options}\n        dataset_dirs={this.state.dataset_dirs}\n        changeDataset={this.changeDataset.bind(this)}\n        selectedDataset={this.state.selectedDataset}\n        datasetDir={this.state.datasetDir}\n        // tiles={this.tiles}\n      />\n\n    ) : (\n      <div className=\"loading\" ><CircularProgress color=\"inherit\"/><div>loading datasets... </div></div>\n      \n    )\n  }\n}\n\nexport default withRouter(Data)\n\n","import React from \"react\";\nimport {\n  BrowserRouter, Routes, Route\n} from \"react-router-dom\";\n\n// Area components\nimport './App.css'\nimport WithRouter from './Data'\n\nexport default function App() {\n  \n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<WithRouter/>} />\n        <Route exact path=\"/CSN\" element={<WithRouter/>}/> \n      </Routes>\n    </BrowserRouter>\n  );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}